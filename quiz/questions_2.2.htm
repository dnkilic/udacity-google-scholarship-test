<section class="quiz" data-title="Espresso Basics Part 1 Quiz" data-subtitle="by Dogan Kilic">
   
    <section class="question">
        <section class="text">
            There is a direct relation between TDD, Refactoring and UI Tests.
        </section>
        <section class="answer"> False </section>
        <section class="answer" data-correct> True </section>
        <section class="description">
            There is no shame in not knowing; the shame lies in not finding out.
        </section>
    </section>
    <section class="question">
        <section class="text">
            Espresso API supports direct access to applications activity to prevent test flakiness.
        </section>
        <section class="answer">True</section>
        <section class="answer" data-correct >False</section>
        <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
            <br>I. Perform an action</br> 
        <br>II. Find a view</br> 
    <br>III. Inspect the result</br> 
            Put in order the above items in correct way as Espresso does.
        </section>
        <section class="answer">I - II - III</section>
        <section class="answer" data-correct>II - I - III</section>
        <section class="answer">III - I - II</section>
        <section class="answer">II - III - I</section>
        <section class="answer">III - II - I</section>
        <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
            Which of the following is not included in Espresso and ViewActions class?
        </section>
        <section class="answer">closeSoftKeyboard()</section>
        <section class="answer"data-correct>openContextualActionModeOverflowMenu()</section>
        <section class="answer" >backPress()</section>
        <section class="answer">backPressUnconditionally()</section>
        <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
            backPressUnconditionally() is different than backPress() since it does not throw exception when Espresso navigates outside of application.
        </section>
        <section class="answer" data-correct>True</section>
        <section class="answer">False</section>
        <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
            Its possible to handle exceptions with ViewAssertions.failureHandler() method.
        </section>
        <section class="answer">True</section>
        <section class="answer" data-correct>False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
            RecycleView and ListView elements should be identified with onView.
        </section>
        <section class="answer">True</section>
        <section class="answer" data-correct>False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
We can combine more than one Matcher in onView through following library       
        </section>
        <section class="answer">Espresso</section>
        <section class="answer">JUnit</section>
        <section class="answer" data-correct>Harmcrest</section>
        <section class="answer">Apache</section>
        <section class="answer">JUnit4</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
    <section class="question">
        <section class="text">
Its better to use as much as matcher to identify a UI components        </section>
        <section class="answer">True</section>
        <section class="answer" data-correct>False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
  <section class="question">
        <section class="text">
hasErrorText(String expectedError) can be used to handle exceptions in Espresso        </section>
        <section class="answer">True</section>
        <section class="answer" data-correct>False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>

 <section class="question">
        <section class="text">
Which of the following ViewMatcher is specific for WebViews?       </section>
        <section class="answer" data-correct>isJavascriptEnabled()</section>
        <section class="answer">hasLinks()</section>
        <section class="answer">hasImeAction(int imeAction)</section>
        <section class="answer">isEnabled()</section>
        <section class="answer">withParentIndex(int index)</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>
<section class="question">
        <section class="text">Espresso library have some special ViewMatchers for which of the following UI component ?</section>
        <section class="answer">ScrollView</section>
        <section class="answer">Button</section>
        <section class="answer" data-correct>Spinner</section>
        <section class="answer">ImageView</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>

  <section class="question">
        <section class="text">ContentDescriptions are used for Accessibility.</section>
        <section class="answer" data-correct>True</section>
        <section class="answer">False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.        </section>
    </section>

<section class="question">
        <section class="text">Which of the following is not a Harmcrest Matcher?</section>
        <section class="answer" data-correct>withChild(...)</section>
        <section class="answer">empty()</section>
        <section class="answer">is(...)</section>
       <section class="answer">not(...)</section>
     <section class="answer">allOf(...)</section>
         <section class="description">
           There is no shame in not knowing; the shame lies in not finding out.     
        </section>
    </section>
<section class="question">
        <section class="text">Which of the following should be disabled in order to test with ViewActions?</section>
        <section class="answer">Stay awake</section>
         <section class="answer">High performance mode</section>
       <section class="answer">USB debugging</section>
            <section class="answer" data-correct>Animations</section>
        <section class="answer">View attribute inspection</section>
         <section class="description">
            There is no shame in not knowing; the shame lies in not finding out.     
        </section>
    </section>
<section class="question">
        <section class="text">Its not possible to use clearText() action with TextView</section>
        <section class="answer" data-correct>True</section>
        <section class="answer">False</section>
         <section class="description">
           There is no shame in not knowing; the shame lies in not finding out.     
        </section>
    </section>
<section class="question">
        <section class="text">Which of the following can be used without focus?</section>
            <section class="answer">typeTextIntoFocusedView()</section>
            <section class="answer" data-correct>typeText()</section>
         <section class="description">
            There is no shame in not knowing; the shame lies in not finding out.      
        </section>
    </section>
<section class="question">
        <section class="text">Its possible to customize button click according to the input type by Espresso?</section>
            <section class="answer" data-correct>True</section>
     <section class="answer">False</section>
         <section class="description">
             There is no shame in not knowing; the shame lies in not finding out.        
        </section>
    </section>
  <section class="question">
        <section class="text">Which of the following method is not a ViewAction?</section>
        <section class="answer">swipeDown</section>
       <section class="answer">swipeUp</section>
       <section class="answer" data-correct>swipeTop</section>
           <section class="answer">swipeLeft</section>
           <section class="answer">swipeRight</section>
</section>
         <section class="description">
             There is no shame in not knowing; the shame lies in not finding out.     
        </section>
    </section>
  <section class="question">
        <section class="text">scrollTo ViewAction can only used by ScrollView descendants?</section>
             <section class="answer"  data-correct>True</section>
      <section class="answer">False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.           </section>
    </section>
 <section class="question">
        <section class="text">Its possible to test if one layout overlap another one</section>
        <section class="answer"data-correct >True</section>
       <section class="answer">False</section>
         <section class="description">
There is no shame in not knowing; the shame lies in not finding out.   
     </section>
    </section>
